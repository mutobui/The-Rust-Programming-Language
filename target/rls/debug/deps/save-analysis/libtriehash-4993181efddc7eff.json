{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4","program":"/Users/stefan_muto/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","triehash","--edition=2018","/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=4993181efddc7eff","-C","extra-filename=-4993181efddc7eff","--out-dir","/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps","-L","dependency=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps","--extern","hash_db=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/libhash_db-5624c8d3274a5cb7.rmeta","--extern","rlp=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/librlp-7449da062f289a76.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/stefan_muto/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/libtriehash-4993181efddc7eff.rmeta"},"prelude":{"crate_id":{"name":"triehash","disambiguator":[8109908880576851004,0]},"crate_root":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src","external_crates":[{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":18,"id":{"name":"hash_db","disambiguator":[4087113677241030450,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":19,"id":{"name":"rlp","disambiguator":[7211152603654376531,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":20,"id":{"name":"bytes","disambiguator":[16456708640185296996,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","num":21,"id":{"name":"rustc_hex","disambiguator":[4904094113549843862,0]}}],"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":342,"byte_end":9665,"line_start":9,"line_end":348,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":342,"byte_end":9665,"line_start":9,"line_end":348,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":24},{"krate":0,"index":28},{"krate":0,"index":35},{"krate":0,"index":41},{"krate":0,"index":45},{"krate":0,"index":51}],"decl_id":null,"docs":" Generetes trie root.","sig":null,"attributes":[{"value":"/ Generetes trie root.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":342,"byte_end":366,"line_start":9,"line_end":9,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":367,"byte_end":370,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module should be used to generate trie root hash.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":371,"byte_end":429,"line_start":11,"line_end":11,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1406,"byte_end":1423,"line_start":52,"line_end":52,"column_start":8,"column_end":25},"name":"ordered_trie_root","qualname":"::ordered_trie_root","value":"pub fn ordered_trie_root<H, I>(I) -> H::Out where I: IntoIterator,\nI::Item: AsRef<[u8]>, H: Hasher, <H as hash_db::Hasher>::Out: cmp::Ord","parent":null,"children":[],"decl_id":null,"docs":" Generates a trie root hash for a vector of values","sig":null,"attributes":[{"value":"/ Generates a trie root hash for a vector of values","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":984,"byte_end":1037,"line_start":40,"line_end":40,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1038,"byte_end":1041,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1042,"byte_end":1049,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ use hex_literal::hex;","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1050,"byte_end":1075,"line_start":43,"line_end":43,"column_start":1,"column_end":26}},{"value":"/ use ethereum_types::H256;","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1076,"byte_end":1105,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ use triehash::ordered_trie_root;","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1106,"byte_end":1142,"line_start":45,"line_end":45,"column_start":1,"column_end":37}},{"value":"/ use keccak_hasher::KeccakHasher;","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1143,"byte_end":1179,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1180,"byte_end":1183,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let v = &[\"doe\", \"reindeer\"];","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1184,"byte_end":1217,"line_start":48,"line_end":48,"column_start":1,"column_end":34}},{"value":"/ let root = H256::from(hex!(\"e766d5d51b89dc39d981b41bda63248d7abce4f0225eefd023792a540bcffee3\"));","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1218,"byte_end":1318,"line_start":49,"line_end":49,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(ordered_trie_root::<KeccakHasher, _>(v), root.as_ref());","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1319,"byte_end":1390,"line_start":50,"line_end":50,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1391,"byte_end":1398,"line_start":51,"line_end":51,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":2141,"byte_end":2150,"line_start":79,"line_end":79,"column_start":8,"column_end":17},"name":"trie_root","qualname":"::trie_root","value":"pub fn trie_root<H, I, A, B>(I) -> H::Out where I: IntoIterator<Item =\n(A, B)>, A: AsRef<[u8]> + Ord, B: AsRef<[u8]>, H: Hasher,\n<H as hash_db::Hasher>::Out: cmp::Ord","parent":null,"children":[],"decl_id":null,"docs":" Generates a trie root hash for a vector of key-value tuples","sig":null,"attributes":[{"value":"/ Generates a trie root hash for a vector of key-value tuples","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1645,"byte_end":1708,"line_start":62,"line_end":62,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1709,"byte_end":1712,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1713,"byte_end":1720,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ use hex_literal::hex;","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1721,"byte_end":1746,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/ use triehash::trie_root;","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1747,"byte_end":1775,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/ use ethereum_types::H256;","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1776,"byte_end":1805,"line_start":67,"line_end":67,"column_start":1,"column_end":30}},{"value":"/ use keccak_hasher::KeccakHasher;","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1806,"byte_end":1842,"line_start":68,"line_end":68,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1843,"byte_end":1846,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let v = vec![","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1847,"byte_end":1864,"line_start":70,"line_end":70,"column_start":1,"column_end":18}},{"value":"/ \t(\"doe\", \"reindeer\"),","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1865,"byte_end":1890,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ \t(\"dog\", \"puppy\"),","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1891,"byte_end":1913,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/ \t(\"dogglesworth\", \"cat\"),","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1914,"byte_end":1943,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/ ];","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1944,"byte_end":1950,"line_start":74,"line_end":74,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1951,"byte_end":1954,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let root = H256::from(hex!(\"8aad789dff2f538bca5d8ea56e8abe10f4c7ba3a5dea95fea4cd6e7c3a1168d3\"));","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":1955,"byte_end":2055,"line_start":76,"line_end":76,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(trie_root::<KeccakHasher, _, _, _>(v), root.as_ref());","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":2056,"byte_end":2125,"line_start":77,"line_end":77,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":2126,"byte_end":2133,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3539,"byte_end":3552,"line_start":126,"line_end":126,"column_start":8,"column_end":21},"name":"sec_trie_root","qualname":"::sec_trie_root","value":"pub fn sec_trie_root<H, I, A, B>(I) -> H::Out where I: IntoIterator<Item =\n(A, B)>, A: AsRef<[u8]>, B: AsRef<[u8]>, H: Hasher,\n<H as hash_db::Hasher>::Out: cmp::Ord","parent":null,"children":[],"decl_id":null,"docs":" Generates a key-hashed (secure) trie root hash for a vector of key-value tuples.","sig":null,"attributes":[{"value":"/ Generates a key-hashed (secure) trie root hash for a vector of key-value tuples.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3014,"byte_end":3098,"line_start":109,"line_end":109,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3099,"byte_end":3102,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3103,"byte_end":3110,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ use hex_literal::hex;","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3111,"byte_end":3136,"line_start":112,"line_end":112,"column_start":1,"column_end":26}},{"value":"/ use ethereum_types::H256;","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3137,"byte_end":3166,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/ use triehash::sec_trie_root;","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3167,"byte_end":3199,"line_start":114,"line_end":114,"column_start":1,"column_end":33}},{"value":"/ use keccak_hasher::KeccakHasher;","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3200,"byte_end":3236,"line_start":115,"line_end":115,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3237,"byte_end":3240,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ let v = vec![","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3241,"byte_end":3258,"line_start":117,"line_end":117,"column_start":1,"column_end":18}},{"value":"/ \t(\"doe\", \"reindeer\"),","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3259,"byte_end":3284,"line_start":118,"line_end":118,"column_start":1,"column_end":26}},{"value":"/ \t(\"dog\", \"puppy\"),","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3285,"byte_end":3307,"line_start":119,"line_end":119,"column_start":1,"column_end":23}},{"value":"/ \t(\"dogglesworth\", \"cat\"),","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3308,"byte_end":3337,"line_start":120,"line_end":120,"column_start":1,"column_end":30}},{"value":"/ ];","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3338,"byte_end":3344,"line_start":121,"line_end":121,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3345,"byte_end":3348,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ let root = H256::from(hex!(\"d4cd937e4a4368d7931a9cf51686b7e10abb3dce38a39000fd7902a092b64585\"));","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3349,"byte_end":3449,"line_start":123,"line_end":123,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(sec_trie_root::<KeccakHasher, _, _, _>(v), root.as_ref());","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3450,"byte_end":3523,"line_start":124,"line_end":124,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/triehash-0.8.4/src/lib.rs","byte_start":3524,"byte_end":3531,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}