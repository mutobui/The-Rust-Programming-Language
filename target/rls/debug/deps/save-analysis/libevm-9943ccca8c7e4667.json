{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0","program":"/Users/stefan_muto/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","evm","--edition=2018","/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"environmental\"","--cfg","feature=\"scale-info\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","-C","metadata=9943ccca8c7e4667","-C","extra-filename=-9943ccca8c7e4667","--out-dir","/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps","-L","dependency=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps","--extern","auto_impl=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/libauto_impl-a81cbe811f75b44e.dylib","--extern","environmental=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/libenvironmental-626b92d4cd7794e3.rmeta","--extern","ethereum=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/libethereum-0ff2420b10677c7e.rmeta","--extern","evm_core=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/libevm_core-5bbe3abe2fdfd692.rmeta","--extern","evm_gasometer=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/libevm_gasometer-a7da31378c9a25c7.rmeta","--extern","evm_runtime=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/libevm_runtime-d594129b7041636c.rmeta","--extern","log=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/liblog-5e5b893e5fa367e7.rmeta","--extern","codec=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/libparity_scale_codec-502d8e368ca0a470.rmeta","--extern","primitive_types=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/libprimitive_types-21cde73db749fd58.rmeta","--extern","rlp=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/librlp-7449da062f289a76.rmeta","--extern","scale_info=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/libscale_info-bca20e68329811a4.rmeta","--extern","serde=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/libserde-ebf19feedff0db4e.rmeta","--extern","sha3=/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/libsha3-2ba43f03aa587581.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/stefan_muto/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/stefan_muto/Projects/Rust/The-Rust-Programming-Language/target/rls/debug/deps/libevm-9943ccca8c7e4667.rmeta"},"prelude":{"crate_id":{"name":"evm","disambiguator":[2797170648067309047,0]},"crate_root":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src","external_crates":[{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":18,"id":{"name":"evm_core","disambiguator":[6623810883119675935,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","num":19,"id":{"name":"primitive_types","disambiguator":[6423852586493531069,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":20,"id":{"name":"fixed_hash","disambiguator":[16958311558365634625,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":21,"id":{"name":"static_assertions","disambiguator":[10004466869080491857,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":22,"id":{"name":"byteorder","disambiguator":[6118066699573772773,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":23,"id":{"name":"rustc_hex","disambiguator":[4904094113549843862,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":24,"id":{"name":"rand","disambiguator":[12901984643046046855,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":25,"id":{"name":"rand_core","disambiguator":[16679925004612314669,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":26,"id":{"name":"getrandom","disambiguator":[3195479937133090562,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":27,"id":{"name":"cfg_if","disambiguator":[13037983282529128945,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":28,"id":{"name":"libc","disambiguator":[9005103142181622755,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":29,"id":{"name":"rand_chacha","disambiguator":[14569171819719609776,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":30,"id":{"name":"ppv_lite86","disambiguator":[12042266499095552183,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":31,"id":{"name":"scale_info","disambiguator":[10413291120226494745,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":32,"id":{"name":"parity_scale_codec","disambiguator":[18254149250577777867,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":33,"id":{"name":"parity_scale_codec_derive","disambiguator":[2111267777615750436,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":34,"id":{"name":"byte_slice_cast","disambiguator":[1450742829568187162,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":35,"id":{"name":"arrayvec","disambiguator":[4765445384651765470,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":36,"id":{"name":"impl_trait_for_tuples","disambiguator":[3299653072833247678,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":37,"id":{"name":"serde","disambiguator":[13196093357761828482,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":38,"id":{"name":"serde_derive","disambiguator":[3615205078175186537,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":39,"id":{"name":"derive_more","disambiguator":[8985746790401941176,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":40,"id":{"name":"scale_info_derive","disambiguator":[11768356015403815951,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":41,"id":{"name":"uint","disambiguator":[14459357963584739712,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":42,"id":{"name":"hex","disambiguator":[14313328291304734710,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":43,"id":{"name":"crunchy","disambiguator":[14753503056835467195,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":44,"id":{"name":"impl_codec","disambiguator":[8344109489853706208,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":45,"id":{"name":"impl_rlp","disambiguator":[18018899711070097879,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","num":46,"id":{"name":"rlp","disambiguator":[7211152603654376531,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":47,"id":{"name":"bytes","disambiguator":[16456708640185296996,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":48,"id":{"name":"evm_gasometer","disambiguator":[12960293735474061364,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":49,"id":{"name":"evm_runtime","disambiguator":[404724755560225690,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","num":50,"id":{"name":"sha3","disambiguator":[14543674471297837669,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":51,"id":{"name":"digest","disambiguator":[7960030921902106253,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":52,"id":{"name":"crypto_common","disambiguator":[8029973214147517645,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":53,"id":{"name":"generic_array","disambiguator":[7841133790266995098,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":54,"id":{"name":"typenum","disambiguator":[14585012641457782044,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":55,"id":{"name":"block_buffer","disambiguator":[15121256659554030653,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","num":56,"id":{"name":"keccak","disambiguator":[14288935386259045601,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","num":57,"id":{"name":"auto_impl","disambiguator":[16060799971550270317,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","num":58,"id":{"name":"ethereum","disambiguator":[13952390403102429980,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","num":59,"id":{"name":"ethereum_types","disambiguator":[5691487756073971700,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","num":60,"id":{"name":"ethbloom","disambiguator":[7982321763146062762,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","num":61,"id":{"name":"tiny_keccak","disambiguator":[2318183551548255441,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","num":62,"id":{"name":"rlp_derive","disambiguator":[2437183988559345790,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","num":63,"id":{"name":"hash256_std_hasher","disambiguator":[16727608128823374008,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","num":64,"id":{"name":"hash_db","disambiguator":[4087113677241030450,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","num":65,"id":{"name":"triehash","disambiguator":[8109908880576851004,0]}},{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","num":66,"id":{"name":"log","disambiguator":[6370244751661190342,0]}}],"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","byte_start":0,"byte_end":575,"line_start":1,"line_end":30,"column_start":1,"column_end":18}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","byte_start":197,"byte_end":198,"line_start":9,"line_end":9,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"Stack, ExitError, ExitSucceed, Capture, ExitReason, Opcode","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":48,"index":0},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","byte_start":208,"byte_end":221,"line_start":10,"line_end":10,"column_start":9,"column_end":22},"alias_span":null,"name":"gasometer","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","byte_start":257,"byte_end":258,"line_start":11,"line_end":11,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Handler, Config, Runtime, CreateScheme, Transfer, Context","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":564},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":712,"byte_end":725,"line_start":7,"line_end":7,"column_start":24,"column_end":37},"alias_span":null,"name":"MemoryAccount","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":582},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":727,"byte_end":740,"line_start":7,"line_end":7,"column_start":39,"column_end":52},"alias_span":null,"name":"MemoryBackend","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":542},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":742,"byte_end":756,"line_start":7,"line_end":7,"column_start":54,"column_end":68},"alias_span":null,"name":"MemoryVicinity","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":58,"index":525},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":1204,"byte_end":1207,"line_start":26,"line_end":26,"column_start":19,"column_end":22},"alias_span":null,"name":"Log","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":697},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":9121,"byte_end":9129,"line_start":9,"line_end":9,"column_start":2,"column_end":10},"alias_span":null,"name":"Accessed","value":"","parent":{"krate":0,"index":109}},{"kind":"Use","ref_id":{"krate":0,"index":802},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":9131,"byte_end":9148,"line_start":9,"line_end":9,"column_start":12,"column_end":29},"alias_span":null,"name":"PrecompileFailure","value":"","parent":{"krate":0,"index":109}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":9150,"byte_end":9162,"line_start":9,"line_end":9,"column_start":31,"column_end":43},"alias_span":null,"name":"PrecompileFn","value":"","parent":{"krate":0,"index":109}},{"kind":"Use","ref_id":{"krate":0,"index":786},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":9164,"byte_end":9180,"line_start":9,"line_end":9,"column_start":45,"column_end":61},"alias_span":null,"name":"PrecompileOutput","value":"","parent":{"krate":0,"index":109}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":9182,"byte_end":9195,"line_start":9,"line_end":9,"column_start":63,"column_end":76},"alias_span":null,"name":"PrecompileSet","value":"","parent":{"krate":0,"index":109}},{"kind":"Use","ref_id":{"krate":0,"index":254},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":9197,"byte_end":9210,"line_start":9,"line_end":9,"column_start":78,"column_end":91},"alias_span":null,"name":"StackExecutor","value":"","parent":{"krate":0,"index":109}},{"kind":"Use","ref_id":{"krate":0,"index":210},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":9213,"byte_end":9226,"line_start":10,"line_end":10,"column_start":2,"column_end":15},"alias_span":null,"name":"StackExitKind","value":"","parent":{"krate":0,"index":109}},{"kind":"Use","ref_id":{"krate":0,"index":718},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":9228,"byte_end":9238,"line_start":10,"line_end":10,"column_start":17,"column_end":27},"alias_span":null,"name":"StackState","value":"","parent":{"krate":0,"index":109}},{"kind":"Use","ref_id":{"krate":0,"index":706},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":9240,"byte_end":9261,"line_start":10,"line_end":10,"column_start":29,"column_end":50},"alias_span":null,"name":"StackSubstateMetadata","value":"","parent":{"krate":0,"index":109}},{"kind":"Use","ref_id":{"krate":0,"index":822},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":9290,"byte_end":9308,"line_start":13,"line_end":13,"column_start":24,"column_end":42},"alias_span":null,"name":"MemoryStackAccount","value":"","parent":{"krate":0,"index":109}},{"kind":"Use","ref_id":{"krate":0,"index":844},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":9310,"byte_end":9326,"line_start":13,"line_end":13,"column_start":44,"column_end":60},"alias_span":null,"name":"MemoryStackState","value":"","parent":{"krate":0,"index":109}},{"kind":"Use","ref_id":{"krate":0,"index":830},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":9328,"byte_end":9347,"line_start":13,"line_end":13,"column_start":62,"column_end":81},"alias_span":null,"name":"MemoryStackSubstate","value":"","parent":{"krate":0,"index":109}},{"kind":"Use","ref_id":{"krate":58,"index":525},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":9369,"byte_end":9372,"line_start":15,"line_end":15,"column_start":19,"column_end":22},"alias_span":null,"name":"Log","value":"","parent":{"krate":0,"index":109}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","byte_start":0,"byte_end":575,"line_start":1,"line_end":30,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":108}],"decl_id":null,"docs":" Ethereum Virtual Machine implementation in Rust\n","sig":null,"attributes":[{"value":"/ Ethereum Virtual Machine implementation in Rust","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","byte_start":0,"byte_end":51,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"deny(warnings)","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","byte_start":53,"byte_end":71,"line_start":3,"line_end":3,"column_start":1,"column_end":19}},{"value":"forbid(unsafe_code, unused_variables)","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","byte_start":72,"byte_end":113,"line_start":4,"line_end":4,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":10},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"backend","qualname":"::backend","value":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":100},{"krate":0,"index":609},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":641},{"krate":0,"index":659},{"krate":0,"index":678},{"krate":0,"index":103}],"decl_id":null,"docs":" # EVM backends","sig":null,"attributes":[{"value":"/ # EVM backends","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":577,"byte_end":595,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":596,"byte_end":599,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Backends store state information of the VM, and exposes it to runtime.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":600,"byte_end":674,"line_start":3,"line_end":3,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":542},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":3638,"byte_end":3652,"line_start":13,"line_end":13,"column_start":12,"column_end":26},"name":"MemoryVicinity","qualname":"::backend::memory::MemoryVicinity","value":"MemoryVicinity { gas_price, origin, chain_id, block_hashes, block_number, block_coinbase, block_timestamp, block_difficulty, block_gas_limit, block_base_fee_per_gas }","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552}],"decl_id":null,"docs":" Vicinity value of a memory backend.\n","sig":null,"attributes":[{"value":"/ Vicinity value of a memory backend.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":3366,"byte_end":3405,"line_start":6,"line_end":6,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":543},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":3676,"byte_end":3685,"line_start":15,"line_end":15,"column_start":6,"column_end":15},"name":"gas_price","qualname":"::backend::memory::MemoryVicinity::gas_price","value":"primitive_types::U256","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Gas price.\n","sig":null,"attributes":[{"value":"/ Gas price.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":3656,"byte_end":3670,"line_start":14,"line_end":14,"column_start":2,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":544},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":3711,"byte_end":3717,"line_start":17,"line_end":17,"column_start":6,"column_end":12},"name":"origin","qualname":"::backend::memory::MemoryVicinity::origin","value":"primitive_types::H160","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Origin.\n","sig":null,"attributes":[{"value":"/ Origin.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":3694,"byte_end":3705,"line_start":16,"line_end":16,"column_start":2,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":545},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":3745,"byte_end":3753,"line_start":19,"line_end":19,"column_start":6,"column_end":14},"name":"chain_id","qualname":"::backend::memory::MemoryVicinity::chain_id","value":"primitive_types::U256","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Chain ID.\n","sig":null,"attributes":[{"value":"/ Chain ID.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":3726,"byte_end":3739,"line_start":18,"line_end":18,"column_start":2,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":546},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":3799,"byte_end":3811,"line_start":21,"line_end":21,"column_start":6,"column_end":18},"name":"block_hashes","qualname":"::backend::memory::MemoryVicinity::block_hashes","value":"std::vec::Vec<primitive_types::H256>","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Environmental block hashes.\n","sig":null,"attributes":[{"value":"/ Environmental block hashes.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":3762,"byte_end":3793,"line_start":20,"line_end":20,"column_start":2,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":547},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":3862,"byte_end":3874,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"name":"block_number","qualname":"::backend::memory::MemoryVicinity::block_number","value":"primitive_types::U256","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Environmental block number.\n","sig":null,"attributes":[{"value":"/ Environmental block number.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":3825,"byte_end":3856,"line_start":22,"line_end":22,"column_start":2,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":548},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":3916,"byte_end":3930,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"name":"block_coinbase","qualname":"::backend::memory::MemoryVicinity::block_coinbase","value":"primitive_types::H160","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Environmental coinbase.\n","sig":null,"attributes":[{"value":"/ Environmental coinbase.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":3883,"byte_end":3910,"line_start":24,"line_end":24,"column_start":2,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":549},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":3979,"byte_end":3994,"line_start":27,"line_end":27,"column_start":6,"column_end":21},"name":"block_timestamp","qualname":"::backend::memory::MemoryVicinity::block_timestamp","value":"primitive_types::U256","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Environmental block timestamp.\n","sig":null,"attributes":[{"value":"/ Environmental block timestamp.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":3939,"byte_end":3973,"line_start":26,"line_end":26,"column_start":2,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":550},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4044,"byte_end":4060,"line_start":29,"line_end":29,"column_start":6,"column_end":22},"name":"block_difficulty","qualname":"::backend::memory::MemoryVicinity::block_difficulty","value":"primitive_types::U256","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Environmental block difficulty.\n","sig":null,"attributes":[{"value":"/ Environmental block difficulty.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4003,"byte_end":4038,"line_start":28,"line_end":28,"column_start":2,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":551},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4109,"byte_end":4124,"line_start":31,"line_end":31,"column_start":6,"column_end":21},"name":"block_gas_limit","qualname":"::backend::memory::MemoryVicinity::block_gas_limit","value":"primitive_types::U256","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Environmental block gas limit.\n","sig":null,"attributes":[{"value":"/ Environmental block gas limit.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4069,"byte_end":4103,"line_start":30,"line_end":30,"column_start":2,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":552},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4174,"byte_end":4196,"line_start":33,"line_end":33,"column_start":6,"column_end":28},"name":"block_base_fee_per_gas","qualname":"::backend::memory::MemoryVicinity::block_base_fee_per_gas","value":"primitive_types::U256","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Environmental base fee per gas.\n","sig":null,"attributes":[{"value":"/ Environmental base fee per gas.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4133,"byte_end":4168,"line_start":32,"line_end":32,"column_start":2,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":564},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4493,"byte_end":4506,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"MemoryAccount","qualname":"::backend::memory::MemoryAccount","value":"MemoryAccount { nonce, balance, storage, code }","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"decl_id":null,"docs":" Account information of a memory backend.\n","sig":null,"attributes":[{"value":"/ Account information of a memory backend.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4207,"byte_end":4251,"line_start":36,"line_end":36,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":565},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4534,"byte_end":4539,"line_start":45,"line_end":45,"column_start":6,"column_end":11},"name":"nonce","qualname":"::backend::memory::MemoryAccount::nonce","value":"primitive_types::U256","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" Account nonce.\n","sig":null,"attributes":[{"value":"/ Account nonce.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4510,"byte_end":4528,"line_start":44,"line_end":44,"column_start":2,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":566},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4574,"byte_end":4581,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"name":"balance","qualname":"::backend::memory::MemoryAccount::balance","value":"primitive_types::U256","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" Account balance.\n","sig":null,"attributes":[{"value":"/ Account balance.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4548,"byte_end":4568,"line_start":46,"line_end":46,"column_start":2,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":567},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4621,"byte_end":4628,"line_start":49,"line_end":49,"column_start":6,"column_end":13},"name":"storage","qualname":"::backend::memory::MemoryAccount::storage","value":"std::collections::BTreeMap<primitive_types::H256, primitive_types::H256>","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" Full account storage.\n","sig":null,"attributes":[{"value":"/ Full account storage.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4590,"byte_end":4615,"line_start":48,"line_end":48,"column_start":2,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":568},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4676,"byte_end":4680,"line_start":51,"line_end":51,"column_start":6,"column_end":10},"name":"code","qualname":"::backend::memory::MemoryAccount::code","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":" Account code.\n","sig":null,"attributes":[{"value":"/ Account code.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4653,"byte_end":4670,"line_start":50,"line_end":50,"column_start":2,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":582},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4801,"byte_end":4814,"line_start":56,"line_end":56,"column_start":12,"column_end":25},"name":"MemoryBackend","qualname":"::backend::memory::MemoryBackend","value":"MemoryBackend {  }","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586}],"decl_id":null,"docs":" Memory backend, storing all state values in a `BTreeMap` in memory.\n","sig":null,"attributes":[{"value":"/ Memory backend, storing all state values in a `BTreeMap` in memory.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4694,"byte_end":4765,"line_start":54,"line_end":54,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":5010,"byte_end":5013,"line_start":64,"line_end":64,"column_start":9,"column_end":12},"name":"new","qualname":"<MemoryBackend>::new","value":"pub fn new(&'vicinity MemoryVicinity, BTreeMap<H160, MemoryAccount>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new memory backend.\n","sig":null,"attributes":[{"value":"/ Create a new memory backend.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4969,"byte_end":5001,"line_start":63,"line_end":63,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":5222,"byte_end":5227,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"name":"state","qualname":"<MemoryBackend>::state","value":"pub fn state(&Self) -> &BTreeMap<H160, MemoryAccount>","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying `BTreeMap` storing the state.\n","sig":null,"attributes":[{"value":"/ Get the underlying `BTreeMap` storing the state.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":5161,"byte_end":5213,"line_start":72,"line_end":72,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":5374,"byte_end":5383,"line_start":78,"line_end":78,"column_start":9,"column_end":18},"name":"state_mut","qualname":"<MemoryBackend>::state_mut","value":"pub fn state_mut(&mut Self) -> &mut BTreeMap<H160, MemoryAccount>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the underlying `BTreeMap` storing the state.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the underlying `BTreeMap` storing the state.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":5290,"byte_end":5365,"line_start":77,"line_end":77,"column_start":2,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":593},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":1095,"byte_end":1100,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"name":"Basic","qualname":"::backend::Basic","value":"Basic { balance, nonce }","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595}],"decl_id":null,"docs":" Basic account information.\n","sig":null,"attributes":[{"value":"/ Basic account information.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":823,"byte_end":853,"line_start":12,"line_end":12,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":594},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":1130,"byte_end":1137,"line_start":21,"line_end":21,"column_start":6,"column_end":13},"name":"balance","qualname":"::backend::Basic::balance","value":"primitive_types::U256","parent":{"krate":0,"index":593},"children":[],"decl_id":null,"docs":" Account balance.\n","sig":null,"attributes":[{"value":"/ Account balance.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":1104,"byte_end":1124,"line_start":20,"line_end":20,"column_start":2,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":595},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":1170,"byte_end":1175,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"name":"nonce","qualname":"::backend::Basic::nonce","value":"primitive_types::U256","parent":{"krate":0,"index":593},"children":[],"decl_id":null,"docs":" Account nonce.\n","sig":null,"attributes":[{"value":"/ Account nonce.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":1146,"byte_end":1164,"line_start":22,"line_end":22,"column_start":2,"column_end":20}}]},{"kind":"StructVariant","id":{"krate":0,"index":611},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":1316,"byte_end":1322,"line_start":32,"line_end":32,"column_start":2,"column_end":8},"name":"Modify","qualname":"::backend::Apply::Modify","value":"Apply::Modify { address, basic, code, storage, reset_storage }","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":" Modify or create at address.\n","sig":null,"attributes":[{"value":"/ Modify or create at address.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":1282,"byte_end":1314,"line_start":31,"line_end":31,"column_start":2,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":617},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":1660,"byte_end":1666,"line_start":46,"line_end":46,"column_start":2,"column_end":8},"name":"Delete","qualname":"::backend::Apply::Delete","value":"Apply::Delete { address }","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":" Delete address.\n","sig":null,"attributes":[{"value":"/ Delete address.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":1639,"byte_end":1658,"line_start":45,"line_end":45,"column_start":2,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":609},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":1270,"byte_end":1275,"line_start":30,"line_end":30,"column_start":10,"column_end":15},"name":"Apply","qualname":"::backend::Apply","value":"pub enum Apply<I> {\n    Modify {\n            address: H160,\n            basic: Basic,\n            code: Option<Vec<u8>>,\n            storage: I,\n            reset_storage: bool,\n        },\n    Delete {\n            address: H160,\n        },\n}","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":617}],"decl_id":null,"docs":" Apply state operation.\n","sig":null,"attributes":[{"value":"/ Apply state operation.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":1210,"byte_end":1236,"line_start":28,"line_end":28,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":625},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":1772,"byte_end":1779,"line_start":54,"line_end":54,"column_start":11,"column_end":18},"name":"Backend","qualname":"::backend::Backend","value":"Backend","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640}],"decl_id":null,"docs":" EVM backend.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":1821,"byte_end":1830,"line_start":56,"line_end":56,"column_start":5,"column_end":14},"name":"gas_price","qualname":"::backend::Backend::gas_price","value":"pub fn gas_price(&Self) -> U256","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Gas price. Unused for London.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":1864,"byte_end":1870,"line_start":58,"line_end":58,"column_start":5,"column_end":11},"name":"origin","qualname":"::backend::Backend::origin","value":"pub fn origin(&Self) -> H160","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Origin.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":1922,"byte_end":1932,"line_start":60,"line_end":60,"column_start":5,"column_end":15},"name":"block_hash","qualname":"::backend::Backend::block_hash","value":"pub fn block_hash(&Self, U256) -> H256","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Environmental block hash.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":2000,"byte_end":2012,"line_start":62,"line_end":62,"column_start":5,"column_end":17},"name":"block_number","qualname":"::backend::Backend::block_number","value":"pub fn block_number(&Self) -> U256","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Environmental block number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":2062,"byte_end":2076,"line_start":64,"line_end":64,"column_start":5,"column_end":19},"name":"block_coinbase","qualname":"::backend::Backend::block_coinbase","value":"pub fn block_coinbase(&Self) -> H160","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Environmental coinbase.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":2133,"byte_end":2148,"line_start":66,"line_end":66,"column_start":5,"column_end":20},"name":"block_timestamp","qualname":"::backend::Backend::block_timestamp","value":"pub fn block_timestamp(&Self) -> U256","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Environmental block timestamp.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":2206,"byte_end":2222,"line_start":68,"line_end":68,"column_start":5,"column_end":21},"name":"block_difficulty","qualname":"::backend::Backend::block_difficulty","value":"pub fn block_difficulty(&Self) -> U256","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Environmental block difficulty.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":2279,"byte_end":2294,"line_start":70,"line_end":70,"column_start":5,"column_end":20},"name":"block_gas_limit","qualname":"::backend::Backend::block_gas_limit","value":"pub fn block_gas_limit(&Self) -> U256","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Environmental block gas limit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":2350,"byte_end":2372,"line_start":72,"line_end":72,"column_start":5,"column_end":27},"name":"block_base_fee_per_gas","qualname":"::backend::Backend::block_base_fee_per_gas","value":"pub fn block_base_fee_per_gas(&Self) -> U256","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Environmental block base fee.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":2422,"byte_end":2430,"line_start":74,"line_end":74,"column_start":5,"column_end":13},"name":"chain_id","qualname":"::backend::Backend::chain_id","value":"pub fn chain_id(&Self) -> U256","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Environmental chain ID.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":2492,"byte_end":2498,"line_start":77,"line_end":77,"column_start":5,"column_end":11},"name":"exists","qualname":"::backend::Backend::exists","value":"pub fn exists(&Self, H160) -> bool","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Whether account at address exists.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":2570,"byte_end":2575,"line_start":79,"line_end":79,"column_start":5,"column_end":10},"name":"basic","qualname":"::backend::Backend::basic","value":"pub fn basic(&Self, H160) -> Basic","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Get basic account information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":2635,"byte_end":2639,"line_start":81,"line_end":81,"column_start":5,"column_end":9},"name":"code","qualname":"::backend::Backend::code","value":"pub fn code(&Self, H160) -> Vec<u8>","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Get account code.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":2722,"byte_end":2729,"line_start":83,"line_end":83,"column_start":5,"column_end":12},"name":"storage","qualname":"::backend::Backend::storage","value":"pub fn storage(&Self, H160, H256) -> H256","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Get storage value of address at index.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":2845,"byte_end":2861,"line_start":85,"line_end":85,"column_start":5,"column_end":21},"name":"original_storage","qualname":"::backend::Backend::original_storage","value":"pub fn original_storage(&Self, H160, H256) -> Option<H256>","parent":{"krate":0,"index":625},"children":[],"decl_id":null,"docs":" Get original storage value of address at index, if available.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":103},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":2967,"byte_end":2979,"line_start":89,"line_end":89,"column_start":11,"column_end":23},"name":"ApplyBackend","qualname":"::backend::ApplyBackend","value":"ApplyBackend","parent":null,"children":[{"krate":0,"index":104}],"decl_id":null,"docs":" EVM backend that can apply changes.\n","sig":null,"attributes":[{"value":"/ EVM backend that can apply changes.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":2917,"byte_end":2956,"line_start":88,"line_end":88,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":3031,"byte_end":3036,"line_start":91,"line_end":91,"column_start":5,"column_end":10},"name":"apply","qualname":"::backend::ApplyBackend::apply","value":"pub fn apply<A, I, L>(&mut Self, A, L, bool) where A: IntoIterator<Item =\nApply<I>>, I: IntoIterator<Item = (H256, H256)>, L: IntoIterator<Item = Log>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Apply given values and logs at backend.\n","sig":null,"attributes":[{"value":"/ Apply given values and logs at backend.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/mod.rs","byte_start":2983,"byte_end":3026,"line_start":90,"line_end":90,"column_start":2,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":108},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"executor","qualname":"::executor","value":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/mod.rs","parent":null,"children":[{"krate":0,"index":109}],"decl_id":null,"docs":" # EVM executors","sig":null,"attributes":[{"value":"/ # EVM executors","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/mod.rs","byte_start":8650,"byte_end":8669,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/mod.rs","byte_start":8670,"byte_end":8673,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Executors are structs that hook gasometer and the EVM core together. It","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/mod.rs","byte_start":8674,"byte_end":8749,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ also handles the call stacks in EVM.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/mod.rs","byte_start":8750,"byte_end":8790,"line_start":4,"line_end":4,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/mod.rs","byte_start":8791,"byte_end":8794,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Currently only a stack-based (customizable) executor is provided.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/mod.rs","byte_start":8795,"byte_end":8864,"line_start":6,"line_end":6,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":109},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stack","qualname":"::executor::stack","value":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":331},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":539}],"decl_id":null,"docs":" A stack-based executor with customizable state.\n A memory-based state is provided, but can replaced by a custom\n implementation, for exemple one interacting with a database.\n","sig":null,"attributes":[{"value":"/ A stack-based executor with customizable state.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":8882,"byte_end":8933,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/ A memory-based state is provided, but can replaced by a custom","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":8934,"byte_end":9000,"line_start":2,"line_end":2,"column_start":1,"column_end":67}},{"value":"/ implementation, for exemple one interacting with a database.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/mod.rs","byte_start":9001,"byte_end":9065,"line_start":3,"line_end":3,"column_start":1,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":211},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":10235,"byte_end":10244,"line_start":39,"line_end":39,"column_start":2,"column_end":11},"name":"Succeeded","qualname":"::executor::stack::executor::StackExitKind::Succeeded","value":"StackExitKind::Succeeded","parent":{"krate":0,"index":210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":213},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":10247,"byte_end":10255,"line_start":40,"line_end":40,"column_start":2,"column_end":10},"name":"Reverted","qualname":"::executor::stack::executor::StackExitKind::Reverted","value":"StackExitKind::Reverted","parent":{"krate":0,"index":210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":215},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":10258,"byte_end":10264,"line_start":41,"line_end":41,"column_start":2,"column_end":8},"name":"Failed","qualname":"::executor::stack::executor::StackExitKind::Failed","value":"StackExitKind::Failed","parent":{"krate":0,"index":210},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":210},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":10218,"byte_end":10231,"line_start":38,"line_end":38,"column_start":10,"column_end":23},"name":"StackExitKind","qualname":"::executor::stack::executor::StackExitKind","value":"pub enum StackExitKind { Succeeded, Reverted, Failed, }","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":697},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":10313,"byte_end":10321,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"Accessed","qualname":"::executor::stack::executor::Accessed","value":"Accessed { accessed_addresses, accessed_storage }","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":698},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":10329,"byte_end":10347,"line_start":46,"line_end":46,"column_start":6,"column_end":24},"name":"accessed_addresses","qualname":"::executor::stack::executor::Accessed::accessed_addresses","value":"std::collections::BTreeSet<primitive_types::H160>","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":699},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":10370,"byte_end":10386,"line_start":47,"line_end":47,"column_start":6,"column_end":22},"name":"accessed_storage","qualname":"::executor::stack::executor::Accessed::accessed_storage","value":"std::collections::BTreeSet<(primitive_types::H160, primitive_types::H256)>","parent":{"krate":0,"index":697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":10439,"byte_end":10453,"line_start":51,"line_end":51,"column_start":9,"column_end":23},"name":"access_address","qualname":"<Accessed>::access_address","value":"pub fn access_address(&mut Self, H160)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":10537,"byte_end":10553,"line_start":55,"line_end":55,"column_start":9,"column_end":25},"name":"access_addresses","qualname":"<Accessed>::access_addresses","value":"pub fn access_addresses<I>(&mut Self, I) where I: Iterator<Item = H160>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":10709,"byte_end":10724,"line_start":64,"line_end":64,"column_start":9,"column_end":24},"name":"access_storages","qualname":"<Accessed>::access_storages","value":"pub fn access_storages<I>(&mut Self, I) where I: Iterator<Item = (H160, H256)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":706},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":10928,"byte_end":10949,"line_start":75,"line_end":75,"column_start":12,"column_end":33},"name":"StackSubstateMetadata","qualname":"::executor::stack::executor::StackSubstateMetadata","value":"StackSubstateMetadata {  }","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":11121,"byte_end":11124,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"name":"new","qualname":"<StackSubstateMetadata>::new","value":"pub fn new(u64, &'config Config) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":11408,"byte_end":11422,"line_start":97,"line_end":97,"column_start":9,"column_end":23},"name":"swallow_commit","qualname":"<StackSubstateMetadata>::swallow_commit","value":"pub fn swallow_commit(&mut Self, Self) -> Result<(), ExitError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":11918,"byte_end":11932,"line_start":116,"line_end":116,"column_start":9,"column_end":23},"name":"swallow_revert","qualname":"<StackSubstateMetadata>::swallow_revert","value":"pub fn swallow_revert(&mut Self, Self) -> Result<(), ExitError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":12063,"byte_end":12078,"line_start":122,"line_end":122,"column_start":9,"column_end":24},"name":"swallow_discard","qualname":"<StackSubstateMetadata>::swallow_discard","value":"pub fn swallow_discard(&mut Self, Self) -> Result<(), ExitError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":12152,"byte_end":12162,"line_start":126,"line_end":126,"column_start":9,"column_end":19},"name":"spit_child","qualname":"<StackSubstateMetadata>::spit_child","value":"pub fn spit_child(&Self, u64, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":12497,"byte_end":12506,"line_start":138,"line_end":138,"column_start":9,"column_end":18},"name":"gasometer","qualname":"<StackSubstateMetadata>::gasometer","value":"pub fn gasometer(&Self) -> &Gasometer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":12569,"byte_end":12582,"line_start":142,"line_end":142,"column_start":9,"column_end":22},"name":"gasometer_mut","qualname":"<StackSubstateMetadata>::gasometer_mut","value":"pub fn gasometer_mut(&mut Self) -> &mut Gasometer","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":12657,"byte_end":12666,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"is_static","qualname":"<StackSubstateMetadata>::is_static","value":"pub fn is_static(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":12713,"byte_end":12718,"line_start":150,"line_end":150,"column_start":9,"column_end":14},"name":"depth","qualname":"<StackSubstateMetadata>::depth","value":"pub fn depth(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":12770,"byte_end":12784,"line_start":154,"line_end":154,"column_start":9,"column_end":23},"name":"access_address","qualname":"<StackSubstateMetadata>::access_address","value":"pub fn access_address(&mut Self, H160)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":12912,"byte_end":12928,"line_start":160,"line_end":160,"column_start":9,"column_end":25},"name":"access_addresses","qualname":"<StackSubstateMetadata>::access_addresses","value":"pub fn access_addresses<I>(&mut Self, I) where I: Iterator<Item = H160>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":13099,"byte_end":13113,"line_start":169,"line_end":169,"column_start":9,"column_end":23},"name":"access_storage","qualname":"<StackSubstateMetadata>::access_storage","value":"pub fn access_storage(&mut Self, H160, H256)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":13269,"byte_end":13284,"line_start":175,"line_end":175,"column_start":9,"column_end":24},"name":"access_storages","qualname":"<StackSubstateMetadata>::access_storages","value":"pub fn access_storages<I>(&mut Self, I) where I: Iterator<Item = (H160, H256)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":13460,"byte_end":13468,"line_start":184,"line_end":184,"column_start":9,"column_end":17},"name":"accessed","qualname":"<StackSubstateMetadata>::accessed","value":"pub fn accessed(&Self) -> &Option<Accessed>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":718},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":13567,"byte_end":13577,"line_start":190,"line_end":190,"column_start":11,"column_end":21},"name":"StackState","qualname":"::executor::stack::executor::StackState","value":"StackState<'config>: Backend","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":13602,"byte_end":13610,"line_start":191,"line_end":191,"column_start":5,"column_end":13},"name":"metadata","qualname":"::executor::stack::executor::StackState::metadata","value":"pub fn metadata(&Self) -> &StackSubstateMetadata","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":13658,"byte_end":13670,"line_start":192,"line_end":192,"column_start":5,"column_end":17},"name":"metadata_mut","qualname":"::executor::stack::executor::StackState::metadata_mut","value":"pub fn metadata_mut(&mut Self) -> &mut StackSubstateMetadata","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":13727,"byte_end":13732,"line_start":194,"line_end":194,"column_start":5,"column_end":10},"name":"enter","qualname":"::executor::stack::executor::StackState::enter","value":"pub fn enter(&mut Self, u64, bool)","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":13782,"byte_end":13793,"line_start":195,"line_end":195,"column_start":5,"column_end":16},"name":"exit_commit","qualname":"::executor::stack::executor::StackState::exit_commit","value":"pub fn exit_commit(&mut Self) -> Result<(), ExitError>","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":13835,"byte_end":13846,"line_start":196,"line_end":196,"column_start":5,"column_end":16},"name":"exit_revert","qualname":"::executor::stack::executor::StackState::exit_revert","value":"pub fn exit_revert(&mut Self) -> Result<(), ExitError>","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":13888,"byte_end":13900,"line_start":197,"line_end":197,"column_start":5,"column_end":17},"name":"exit_discard","qualname":"::executor::stack::executor::StackState::exit_discard","value":"pub fn exit_discard(&mut Self) -> Result<(), ExitError>","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":13943,"byte_end":13951,"line_start":199,"line_end":199,"column_start":5,"column_end":13},"name":"is_empty","qualname":"::executor::stack::executor::StackState::is_empty","value":"pub fn is_empty(&Self, H160) -> bool","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":13987,"byte_end":13994,"line_start":200,"line_end":200,"column_start":5,"column_end":12},"name":"deleted","qualname":"::executor::stack::executor::StackState::deleted","value":"pub fn deleted(&Self, H160) -> bool","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14030,"byte_end":14037,"line_start":201,"line_end":201,"column_start":5,"column_end":12},"name":"is_cold","qualname":"::executor::stack::executor::StackState::is_cold","value":"pub fn is_cold(&Self, H160) -> bool","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14073,"byte_end":14088,"line_start":202,"line_end":202,"column_start":5,"column_end":20},"name":"is_storage_cold","qualname":"::executor::stack::executor::StackState::is_storage_cold","value":"pub fn is_storage_cold(&Self, H160, H256) -> bool","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14136,"byte_end":14145,"line_start":204,"line_end":204,"column_start":5,"column_end":14},"name":"inc_nonce","qualname":"::executor::stack::executor::StackState::inc_nonce","value":"pub fn inc_nonce(&mut Self, H160)","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14177,"byte_end":14188,"line_start":205,"line_end":205,"column_start":5,"column_end":16},"name":"set_storage","qualname":"::executor::stack::executor::StackState::set_storage","value":"pub fn set_storage(&mut Self, H160, H256, H256)","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14244,"byte_end":14257,"line_start":206,"line_end":206,"column_start":5,"column_end":18},"name":"reset_storage","qualname":"::executor::stack::executor::StackState::reset_storage","value":"pub fn reset_storage(&mut Self, H160)","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14289,"byte_end":14292,"line_start":207,"line_end":207,"column_start":5,"column_end":8},"name":"log","qualname":"::executor::stack::executor::StackState::log","value":"pub fn log(&mut Self, H160, Vec<H256>, Vec<u8>)","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14358,"byte_end":14369,"line_start":208,"line_end":208,"column_start":5,"column_end":16},"name":"set_deleted","qualname":"::executor::stack::executor::StackState::set_deleted","value":"pub fn set_deleted(&mut Self, H160)","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14401,"byte_end":14409,"line_start":209,"line_end":209,"column_start":5,"column_end":13},"name":"set_code","qualname":"::executor::stack::executor::StackState::set_code","value":"pub fn set_code(&mut Self, H160, Vec<u8>)","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14456,"byte_end":14464,"line_start":210,"line_end":210,"column_start":5,"column_end":13},"name":"transfer","qualname":"::executor::stack::executor::StackState::transfer","value":"pub fn transfer(&mut Self, Transfer) -> Result<(), ExitError>","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14526,"byte_end":14539,"line_start":211,"line_end":211,"column_start":5,"column_end":18},"name":"reset_balance","qualname":"::executor::stack::executor::StackState::reset_balance","value":"pub fn reset_balance(&mut Self, H160)","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14571,"byte_end":14576,"line_start":212,"line_end":212,"column_start":5,"column_end":10},"name":"touch","qualname":"::executor::stack::executor::StackState::touch","value":"pub fn touch(&mut Self, H160)","parent":{"krate":0,"index":718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":786},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14703,"byte_end":14719,"line_start":217,"line_end":217,"column_start":12,"column_end":28},"name":"PrecompileOutput","qualname":"::executor::stack::executor::PrecompileOutput","value":"PrecompileOutput { exit_status, cost, output, logs }","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790}],"decl_id":null,"docs":" Data returned by a precompile on success.\n","sig":null,"attributes":[{"value":"/ Data returned by a precompile on success.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14607,"byte_end":14652,"line_start":215,"line_end":215,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":787},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14727,"byte_end":14738,"line_start":218,"line_end":218,"column_start":6,"column_end":17},"name":"exit_status","qualname":"::executor::stack::executor::PrecompileOutput::exit_status","value":"evm_core::ExitSucceed","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":788},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14758,"byte_end":14762,"line_start":219,"line_end":219,"column_start":6,"column_end":10},"name":"cost","qualname":"::executor::stack::executor::PrecompileOutput::cost","value":"u64","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":789},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14774,"byte_end":14780,"line_start":220,"line_end":220,"column_start":6,"column_end":12},"name":"output","qualname":"::executor::stack::executor::PrecompileOutput::output","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":790},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14796,"byte_end":14800,"line_start":221,"line_end":221,"column_start":6,"column_end":10},"name":"logs","qualname":"::executor::stack::executor::PrecompileOutput::logs","value":"std::vec::Vec<ethereum::Log>","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":803},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14994,"byte_end":14999,"line_start":228,"line_end":228,"column_start":2,"column_end":7},"name":"Error","qualname":"::executor::stack::executor::PrecompileFailure::Error","value":"PrecompileFailure::Error { exit_status }","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":" Reverts the state changes and consume all the gas.\n","sig":null,"attributes":[{"value":"/ Reverts the state changes and consume all the gas.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14938,"byte_end":14992,"line_start":227,"line_end":227,"column_start":2,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":805},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":15134,"byte_end":15140,"line_start":231,"line_end":231,"column_start":2,"column_end":8},"name":"Revert","qualname":"::executor::stack::executor::PrecompileFailure::Revert","value":"PrecompileFailure::Revert { exit_status, output, cost }","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":" Reverts the state changes and consume the provided `cost`.\n Returns the provided error message.\n","sig":null,"attributes":[{"value":"/ Reverts the state changes and consume the provided `cost`.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":15029,"byte_end":15091,"line_start":229,"line_end":229,"column_start":2,"column_end":64}},{"value":"/ Returns the provided error message.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":15093,"byte_end":15132,"line_start":230,"line_end":230,"column_start":2,"column_end":41}}]},{"kind":"StructVariant","id":{"krate":0,"index":809},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":15285,"byte_end":15290,"line_start":237,"line_end":237,"column_start":2,"column_end":7},"name":"Fatal","qualname":"::executor::stack::executor::PrecompileFailure::Fatal","value":"PrecompileFailure::Fatal { exit_status }","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":" Mark this failure as fatal, and all EVM execution stacks must be exited.\n","sig":null,"attributes":[{"value":"/ Mark this failure as fatal, and all EVM execution stacks must be exited.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":15207,"byte_end":15283,"line_start":236,"line_end":236,"column_start":2,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":802},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14917,"byte_end":14934,"line_start":226,"line_end":226,"column_start":10,"column_end":27},"name":"PrecompileFailure","qualname":"::executor::stack::executor::PrecompileFailure","value":"pub enum PrecompileFailure {\n    Error {\n            exit_status: ExitError,\n        },\n    Revert {\n            exit_status: ExitRevert,\n            output: Vec<u8>,\n            cost: u64,\n        },\n    Fatal {\n            exit_status: ExitFatal,\n        },\n}","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":805},{"krate":0,"index":809}],"decl_id":null,"docs":" Data returned by a precompile in case of failure.\n","sig":null,"attributes":[{"value":"/ Data returned by a precompile in case of failure.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":14815,"byte_end":14868,"line_start":224,"line_end":224,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":243},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":15585,"byte_end":15598,"line_start":246,"line_end":246,"column_start":11,"column_end":24},"name":"PrecompileSet","qualname":"::executor::stack::executor::PrecompileSet","value":"PrecompileSet","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"decl_id":null,"docs":" A set of precompiles.\n Checks of the provided address being in the precompile set should be\n as cheap as possible since it may be called often.\n","sig":null,"attributes":[{"value":"/ A set of precompiles.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":15421,"byte_end":15446,"line_start":243,"line_end":243,"column_start":1,"column_end":26}},{"value":"/ Checks of the provided address being in the precompile set should be","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":15447,"byte_end":15519,"line_start":244,"line_end":244,"column_start":1,"column_end":73}},{"value":"/ as cheap as possible since it may be called often.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":15520,"byte_end":15574,"line_start":245,"line_end":245,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":15727,"byte_end":15734,"line_start":249,"line_end":249,"column_start":5,"column_end":12},"name":"execute","qualname":"::executor::stack::executor::PrecompileSet::execute","value":"pub fn execute(&Self, H160, &[u8], Option<u64>, &Context, bool)\n-> Option<PrecompileResult>","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Tries to execute a precompile in the precompile set.\n If the provided address is not a precompile, returns None.\n","sig":null,"attributes":[{"value":"/ Tries to execute a precompile in the precompile set.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":15602,"byte_end":15658,"line_start":247,"line_end":247,"column_start":2,"column_end":58}},{"value":"/ If the provided address is not a precompile, returns None.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":15660,"byte_end":15722,"line_start":248,"line_end":248,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":16082,"byte_end":16095,"line_start":261,"line_end":261,"column_start":5,"column_end":18},"name":"is_precompile","qualname":"::executor::stack::executor::PrecompileSet::is_precompile","value":"pub fn is_precompile(&Self, H160) -> bool","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Check if the given address is a precompile. Should only be called to\n perform the check while not executing the precompile afterward, since\n `execute` already performs a check internally.\n","sig":null,"attributes":[{"value":"/ Check if the given address is a precompile. Should only be called to","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":15878,"byte_end":15950,"line_start":258,"line_end":258,"column_start":2,"column_end":74}},{"value":"/ perform the check while not executing the precompile afterward, since","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":15952,"byte_end":16025,"line_start":259,"line_end":259,"column_start":2,"column_end":75}},{"value":"/ `execute` already performs a check internally.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":16027,"byte_end":16077,"line_start":260,"line_end":260,"column_start":2,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":249},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":16486,"byte_end":16498,"line_start":286,"line_end":286,"column_start":10,"column_end":22},"name":"PrecompileFn","qualname":"::executor::stack::executor::PrecompileFn","value":"fn(: &[u8], : Option<u64>, : &Context, : bool) -> PrecompileResult","parent":null,"children":[],"decl_id":null,"docs":" Precompiles function signature. Expected input arguments are:\n  * Input\n  * Gas limit\n  * Context\n  * Is static\n","sig":null,"attributes":[{"value":"/ Precompiles function signature. Expected input arguments are:","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":16349,"byte_end":16414,"line_start":281,"line_end":281,"column_start":1,"column_end":66}},{"value":"/  * Input","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":16415,"byte_end":16427,"line_start":282,"line_end":282,"column_start":1,"column_end":13}},{"value":"/  * Gas limit","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":16428,"byte_end":16444,"line_start":283,"line_end":283,"column_start":1,"column_end":17}},{"value":"/  * Context","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":16445,"byte_end":16459,"line_start":284,"line_end":284,"column_start":1,"column_end":15}},{"value":"/  * Is static","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":16460,"byte_end":16476,"line_start":285,"line_end":285,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":254},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":17193,"byte_end":17206,"line_start":310,"line_end":310,"column_start":12,"column_end":25},"name":"StackExecutor","qualname":"::executor::stack::executor::StackExecutor","value":"StackExecutor {  }","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"decl_id":null,"docs":" Stack-based executor.\n","sig":null,"attributes":[{"value":"/ Stack-based executor.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":17156,"byte_end":17181,"line_start":309,"line_end":309,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":17475,"byte_end":17481,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"name":"config","qualname":"<StackExecutor>::config","value":"pub fn config(&Self) -> &'config Config","parent":null,"children":[],"decl_id":null,"docs":" Return a reference of the Config.\n","sig":null,"attributes":[{"value":"/ Return a reference of the Config.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":17429,"byte_end":17466,"line_start":319,"line_end":319,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":17583,"byte_end":17594,"line_start":325,"line_end":325,"column_start":9,"column_end":20},"name":"precompiles","qualname":"<StackExecutor>::precompiles","value":"pub fn precompiles(&Self) -> &'precompiles P","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the precompile set.\n","sig":null,"attributes":[{"value":"/ Return a reference to the precompile set.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":17529,"byte_end":17574,"line_start":324,"line_end":324,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":17720,"byte_end":17740,"line_start":330,"line_end":330,"column_start":9,"column_end":29},"name":"new_with_precompiles","qualname":"<StackExecutor>::new_with_precompiles","value":"pub fn new_with_precompiles(S, &'config Config, &'precompiles P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new stack-based executor with given precompiles.\n","sig":null,"attributes":[{"value":"/ Create a new stack-based executor with given precompiles.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":17650,"byte_end":17711,"line_start":329,"line_end":329,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":17894,"byte_end":17899,"line_start":342,"line_end":342,"column_start":9,"column_end":14},"name":"state","qualname":"<StackExecutor>::state","value":"pub fn state(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":17941,"byte_end":17950,"line_start":346,"line_end":346,"column_start":9,"column_end":18},"name":"state_mut","qualname":"<StackExecutor>::state_mut","value":"pub fn state_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":18004,"byte_end":18014,"line_start":350,"line_end":350,"column_start":9,"column_end":19},"name":"into_state","qualname":"<StackExecutor>::into_state","value":"pub fn into_state(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":18112,"byte_end":18126,"line_start":355,"line_end":355,"column_start":9,"column_end":23},"name":"enter_substate","qualname":"<StackExecutor>::enter_substate","value":"pub fn enter_substate(&mut Self, u64, bool)","parent":null,"children":[],"decl_id":null,"docs":" Create a substate executor from the current executor.\n","sig":null,"attributes":[{"value":"/ Create a substate executor from the current executor.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":18046,"byte_end":18103,"line_start":354,"line_end":354,"column_start":2,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":18294,"byte_end":18307,"line_start":360,"line_end":360,"column_start":9,"column_end":22},"name":"exit_substate","qualname":"<StackExecutor>::exit_substate","value":"pub fn exit_substate(&mut Self, StackExitKind) -> Result<(), ExitError>","parent":null,"children":[],"decl_id":null,"docs":" Exit a substate. Panic if it results an empty substate stack.\n","sig":null,"attributes":[{"value":"/ Exit a substate. Panic if it results an empty substate stack.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":18220,"byte_end":18285,"line_start":359,"line_end":359,"column_start":2,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":18609,"byte_end":18616,"line_start":369,"line_end":369,"column_start":9,"column_end":16},"name":"execute","qualname":"<StackExecutor>::execute","value":"pub fn execute(&mut Self, &mut Runtime) -> ExitReason","parent":null,"children":[],"decl_id":null,"docs":" Execute the runtime until it returns.\n","sig":null,"attributes":[{"value":"/ Execute the runtime until it returns.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":18559,"byte_end":18600,"line_start":368,"line_end":368,"column_start":2,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":18820,"byte_end":18823,"line_start":377,"line_end":377,"column_start":9,"column_end":12},"name":"gas","qualname":"<StackExecutor>::gas","value":"pub fn gas(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get remaining gas.\n","sig":null,"attributes":[{"value":"/ Get remaining gas.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":18789,"byte_end":18811,"line_start":376,"line_end":376,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":19263,"byte_end":19278,"line_start":392,"line_end":392,"column_start":9,"column_end":24},"name":"transact_create","qualname":"<StackExecutor>::transact_create","value":"pub fn transact_create(&mut Self, H160, U256, Vec<u8>, u64,\nVec<(H160, Vec<H256>)>) -> (ExitReason, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Execute a `CREATE` transaction.\n","sig":null,"attributes":[{"value":"/ Execute a `CREATE` transaction.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":19219,"byte_end":19254,"line_start":391,"line_end":391,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":20065,"byte_end":20081,"line_start":427,"line_end":427,"column_start":9,"column_end":25},"name":"transact_create2","qualname":"<StackExecutor>::transact_create2","value":"pub fn transact_create2(&mut Self, H160, U256, Vec<u8>, H256, u64,\nVec<(H160, Vec<H256>)>) -> (ExitReason, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Execute a `CREATE2` transaction.\n","sig":null,"attributes":[{"value":"/ Execute a `CREATE2` transaction.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":20020,"byte_end":20056,"line_start":426,"line_end":426,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":21310,"byte_end":21323,"line_start":478,"line_end":478,"column_start":9,"column_end":22},"name":"transact_call","qualname":"<StackExecutor>::transact_call","value":"pub fn transact_call(&mut Self, H160, H160, U256, Vec<u8>, u64,\nVec<(H160, Vec<H256>)>) -> (ExitReason, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Execute a `CALL` transaction with a given caller, address, value and\n gas limit and data.","sig":null,"attributes":[{"value":"/ Execute a `CALL` transaction with a given caller, address, value and","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":20993,"byte_end":21065,"line_start":472,"line_end":472,"column_start":2,"column_end":74}},{"value":"/ gas limit and data.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":21067,"byte_end":21090,"line_start":473,"line_end":473,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":21092,"byte_end":21095,"line_start":474,"line_end":474,"column_start":2,"column_end":5}},{"value":"/ Takes in an additional `access_list` parameter for EIP-2930 which was","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":21097,"byte_end":21170,"line_start":475,"line_end":475,"column_start":2,"column_end":75}},{"value":"/ introduced in the Ethereum Berlin hard fork. If you do not wish to use","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":21172,"byte_end":21246,"line_start":476,"line_end":476,"column_start":2,"column_end":76}},{"value":"/ this functionality, just pass in an empty vector.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":21248,"byte_end":21301,"line_start":477,"line_end":477,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":22609,"byte_end":22617,"line_start":538,"line_end":538,"column_start":9,"column_end":17},"name":"used_gas","qualname":"<StackExecutor>::used_gas","value":"pub fn used_gas(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get used gas for the current executor, given the price.\n","sig":null,"attributes":[{"value":"/ Get used gas for the current executor, given the price.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":22541,"byte_end":22600,"line_start":537,"line_end":537,"column_start":2,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":22922,"byte_end":22925,"line_start":547,"line_end":547,"column_start":9,"column_end":12},"name":"fee","qualname":"<StackExecutor>::fee","value":"pub fn fee(&Self, U256) -> U256","parent":null,"children":[],"decl_id":null,"docs":" Get fee needed for the current executor, given the price.\n","sig":null,"attributes":[{"value":"/ Get fee needed for the current executor, given the price.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":22852,"byte_end":22913,"line_start":546,"line_end":546,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":23057,"byte_end":23062,"line_start":553,"line_end":553,"column_start":9,"column_end":14},"name":"nonce","qualname":"<StackExecutor>::nonce","value":"pub fn nonce(&Self, H160) -> U256","parent":null,"children":[],"decl_id":null,"docs":" Get account nonce.\n","sig":null,"attributes":[{"value":"/ Get account nonce.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":23026,"byte_end":23048,"line_start":552,"line_end":552,"column_start":2,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":23188,"byte_end":23202,"line_start":558,"line_end":558,"column_start":9,"column_end":23},"name":"create_address","qualname":"<StackExecutor>::create_address","value":"pub fn create_address(&Self, CreateScheme) -> H160","parent":null,"children":[],"decl_id":null,"docs":" Get the create address from given scheme.\n","sig":null,"attributes":[{"value":"/ Get the create address from given scheme.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":23134,"byte_end":23179,"line_start":557,"line_end":557,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":23881,"byte_end":23908,"line_start":583,"line_end":583,"column_start":9,"column_end":36},"name":"initialize_with_access_list","qualname":"<StackExecutor>::initialize_with_access_list","value":"pub fn initialize_with_access_list(&mut Self, Vec<(H160, Vec<H256>)>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":822},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":39387,"byte_end":39405,"line_start":13,"line_end":13,"column_start":12,"column_end":30},"name":"MemoryStackAccount","qualname":"::executor::stack::memory::MemoryStackAccount","value":"MemoryStackAccount { basic, code, reset }","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":823},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":39413,"byte_end":39418,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"name":"basic","qualname":"::executor::stack::memory::MemoryStackAccount::basic","value":"backend::Basic","parent":{"krate":0,"index":822},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":824},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":39432,"byte_end":39436,"line_start":15,"line_end":15,"column_start":6,"column_end":10},"name":"code","qualname":"::executor::stack::memory::MemoryStackAccount::code","value":"std::option::Option<std::vec::Vec<u8>>","parent":{"krate":0,"index":822},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":825},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":39460,"byte_end":39465,"line_start":16,"line_end":16,"column_start":6,"column_end":11},"name":"reset","qualname":"::executor::stack::memory::MemoryStackAccount::reset","value":"bool","parent":{"krate":0,"index":822},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":830},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":39511,"byte_end":39530,"line_start":20,"line_end":20,"column_start":12,"column_end":31},"name":"MemoryStackSubstate","qualname":"::executor::stack::memory::MemoryStackSubstate","value":"MemoryStackSubstate {  }","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":39824,"byte_end":39827,"line_start":30,"line_end":30,"column_start":9,"column_end":12},"name":"new","qualname":"<MemoryStackSubstate>::new","value":"pub fn new(StackSubstateMetadata) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":40045,"byte_end":40049,"line_start":41,"line_end":41,"column_start":9,"column_end":13},"name":"logs","qualname":"<MemoryStackSubstate>::logs","value":"pub fn logs(&Self) -> &[Log]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":40094,"byte_end":40102,"line_start":45,"line_end":45,"column_start":9,"column_end":17},"name":"logs_mut","qualname":"<MemoryStackSubstate>::logs_mut","value":"pub fn logs_mut(&mut Self) -> &mut Vec<Log>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":40162,"byte_end":40170,"line_start":49,"line_end":49,"column_start":9,"column_end":17},"name":"metadata","qualname":"<MemoryStackSubstate>::metadata","value":"pub fn metadata(&Self) -> &StackSubstateMetadata","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":40244,"byte_end":40256,"line_start":53,"line_end":53,"column_start":9,"column_end":21},"name":"metadata_mut","qualname":"<MemoryStackSubstate>::metadata_mut","value":"pub fn metadata_mut(&mut Self) -> &mut StackSubstateMetadata","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":40475,"byte_end":40486,"line_start":60,"line_end":60,"column_start":9,"column_end":20},"name":"deconstruct","qualname":"<MemoryStackSubstate>::deconstruct","value":"pub fn deconstruct<B: Backend>(Self, &B) -> (/*impl Trait*/, /*impl Trait*/)","parent":null,"children":[],"decl_id":null,"docs":" Deconstruct the executor, return state to be applied. Panic if the\n executor is not in the top-level substate.\n","sig":null,"attributes":[{"value":"/ Deconstruct the executor, return state to be applied. Panic if the","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":40335,"byte_end":40405,"line_start":57,"line_end":57,"column_start":2,"column_end":72}},{"value":"/ executor is not in the top-level substate.","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":40407,"byte_end":40453,"line_start":58,"line_end":58,"column_start":2,"column_end":48}},{"value":"must_use","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":40455,"byte_end":40466,"line_start":59,"line_end":59,"column_start":2,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":41561,"byte_end":41566,"line_start":115,"line_end":115,"column_start":9,"column_end":14},"name":"enter","qualname":"<MemoryStackSubstate>::enter","value":"pub fn enter(&mut Self, u64, bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":41923,"byte_end":41934,"line_start":129,"line_end":129,"column_start":9,"column_end":20},"name":"exit_commit","qualname":"<MemoryStackSubstate>::exit_commit","value":"pub fn exit_commit(&mut Self) -> Result<(), ExitError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":42731,"byte_end":42742,"line_start":159,"line_end":159,"column_start":9,"column_end":20},"name":"exit_revert","qualname":"<MemoryStackSubstate>::exit_revert","value":"pub fn exit_revert(&mut Self) -> Result<(), ExitError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":42968,"byte_end":42980,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"name":"exit_discard","qualname":"<MemoryStackSubstate>::exit_discard","value":"pub fn exit_discard(&mut Self) -> Result<(), ExitError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":43207,"byte_end":43220,"line_start":177,"line_end":177,"column_start":9,"column_end":22},"name":"known_account","qualname":"<MemoryStackSubstate>::known_account","value":"pub fn known_account(&Self, H160) -> Option<&MemoryStackAccount>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":43470,"byte_end":43481,"line_start":187,"line_end":187,"column_start":9,"column_end":20},"name":"known_basic","qualname":"<MemoryStackSubstate>::known_basic","value":"pub fn known_basic(&Self, H160) -> Option<Basic>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":43594,"byte_end":43604,"line_start":191,"line_end":191,"column_start":9,"column_end":19},"name":"known_code","qualname":"<MemoryStackSubstate>::known_code","value":"pub fn known_code(&Self, H160) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":43723,"byte_end":43734,"line_start":195,"line_end":195,"column_start":9,"column_end":20},"name":"known_empty","qualname":"<MemoryStackSubstate>::known_empty","value":"pub fn known_empty(&Self, H160) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":44186,"byte_end":44199,"line_start":217,"line_end":217,"column_start":9,"column_end":22},"name":"known_storage","qualname":"<MemoryStackSubstate>::known_storage","value":"pub fn known_storage(&Self, H160, H256) -> Option<H256>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":44578,"byte_end":44600,"line_start":235,"line_end":235,"column_start":9,"column_end":31},"name":"known_original_storage","qualname":"<MemoryStackSubstate>::known_original_storage","value":"pub fn known_original_storage(&Self, H160, H256) -> Option<H256>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":44899,"byte_end":44906,"line_start":249,"line_end":249,"column_start":9,"column_end":16},"name":"is_cold","qualname":"<MemoryStackSubstate>::is_cold","value":"pub fn is_cold(&Self, H160) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":45022,"byte_end":45037,"line_start":253,"line_end":253,"column_start":9,"column_end":24},"name":"is_storage_cold","qualname":"<MemoryStackSubstate>::is_storage_cold","value":"pub fn is_storage_cold(&Self, H160, H256) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":45477,"byte_end":45484,"line_start":269,"line_end":269,"column_start":9,"column_end":16},"name":"deleted","qualname":"<MemoryStackSubstate>::deleted","value":"pub fn deleted(&Self, H160) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":46231,"byte_end":46240,"line_start":304,"line_end":304,"column_start":9,"column_end":18},"name":"inc_nonce","qualname":"<MemoryStackSubstate>::inc_nonce","value":"pub fn inc_nonce<B: Backend>(&mut Self, H160, &B)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":46371,"byte_end":46382,"line_start":308,"line_end":308,"column_start":9,"column_end":20},"name":"set_storage","qualname":"<MemoryStackSubstate>::set_storage","value":"pub fn set_storage(&mut Self, H160, H256, H256)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":46494,"byte_end":46507,"line_start":312,"line_end":312,"column_start":9,"column_end":22},"name":"reset_storage","qualname":"<MemoryStackSubstate>::reset_storage","value":"pub fn reset_storage<B: Backend>(&mut Self, H160, &B)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":46825,"byte_end":46828,"line_start":328,"line_end":328,"column_start":9,"column_end":12},"name":"log","qualname":"<MemoryStackSubstate>::log","value":"pub fn log(&mut Self, H160, Vec<H256>, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":46964,"byte_end":46975,"line_start":336,"line_end":336,"column_start":9,"column_end":20},"name":"set_deleted","qualname":"<MemoryStackSubstate>::set_deleted","value":"pub fn set_deleted(&mut Self, H160)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":47048,"byte_end":47056,"line_start":340,"line_end":340,"column_start":9,"column_end":17},"name":"set_code","qualname":"<MemoryStackSubstate>::set_code","value":"pub fn set_code<B: Backend>(&mut Self, H160, Vec<u8>, &B)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":47193,"byte_end":47201,"line_start":344,"line_end":344,"column_start":9,"column_end":17},"name":"transfer","qualname":"<MemoryStackSubstate>::transfer","value":"pub fn transfer<B: Backend>(&mut Self, Transfer, &B) -> Result<(), ExitError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":47696,"byte_end":47704,"line_start":366,"line_end":366,"column_start":9,"column_end":17},"name":"withdraw","qualname":"<MemoryStackSubstate>::withdraw","value":"pub fn withdraw<B: Backend>(&mut Self, H160, U256, &B)\n-> Result<(), ExitError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":48022,"byte_end":48029,"line_start":382,"line_end":382,"column_start":9,"column_end":16},"name":"deposit","qualname":"<MemoryStackSubstate>::deposit","value":"pub fn deposit<B: Backend>(&mut Self, H160, U256, &B)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":48228,"byte_end":48241,"line_start":387,"line_end":387,"column_start":9,"column_end":22},"name":"reset_balance","qualname":"<MemoryStackSubstate>::reset_balance","value":"pub fn reset_balance<B: Backend>(&mut Self, H160, &B)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":48374,"byte_end":48379,"line_start":391,"line_end":391,"column_start":9,"column_end":14},"name":"touch","qualname":"<MemoryStackSubstate>::touch","value":"pub fn touch<B: Backend>(&mut Self, H160, &B)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":844},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":48512,"byte_end":48528,"line_start":397,"line_end":397,"column_start":12,"column_end":28},"name":"MemoryStackState","qualname":"::executor::stack::memory::MemoryStackState","value":"MemoryStackState {  }","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":52487,"byte_end":52490,"line_start":551,"line_end":551,"column_start":9,"column_end":12},"name":"new","qualname":"<MemoryStackState>::new","value":"pub fn new(StackSubstateMetadata, &'backend B) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":52716,"byte_end":52727,"line_start":559,"line_end":559,"column_start":9,"column_end":20},"name":"account_mut","qualname":"<MemoryStackState>::account_mut","value":"pub fn account_mut(&mut Self, H160) -> &mut MemoryStackAccount","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to an account given its address\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to an account given its address","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":52644,"byte_end":52707,"line_start":558,"line_end":558,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":52859,"byte_end":52870,"line_start":564,"line_end":564,"column_start":9,"column_end":20},"name":"deconstruct","qualname":"<MemoryStackState>::deconstruct","value":"pub fn deconstruct(Self) -> (/*impl Trait*/, /*impl Trait*/)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":52839,"byte_end":52850,"line_start":563,"line_end":563,"column_start":2,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":53055,"byte_end":53063,"line_start":573,"line_end":573,"column_start":9,"column_end":17},"name":"withdraw","qualname":"<MemoryStackState>::withdraw","value":"pub fn withdraw(&mut Self, H160, U256) -> Result<(), ExitError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":53197,"byte_end":53204,"line_start":577,"line_end":577,"column_start":9,"column_end":16},"name":"deposit","qualname":"<MemoryStackState>::deposit","value":"pub fn deposit(&mut Self, H160, U256)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4941,"byte_end":4954,"line_start":62,"line_end":62,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":5487,"byte_end":5500,"line_start":83,"line_end":83,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":7197,"byte_end":7210,"line_start":157,"line_end":157,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":10420,"byte_end":10428,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":11080,"byte_end":11101,"line_start":82,"line_end":82,"column_start":15,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":16585,"byte_end":16593,"line_start":288,"line_end":288,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":17383,"byte_end":17396,"line_start":317,"line_end":317,"column_start":2,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":289},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":33582,"byte_end":33595,"line_start":936,"line_end":936,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":39785,"byte_end":39804,"line_start":29,"line_end":29,"column_start":15,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":48668,"byte_end":48684,"line_start":402,"line_end":402,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":50273,"byte_end":50289,"line_start":466,"line_end":466,"column_start":61,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":52438,"byte_end":52454,"line_start":550,"line_end":550,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","byte_start":549,"byte_end":556,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":10}},{"kind":"Mod","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/lib.rs","byte_start":566,"byte_end":574,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":108}},{"kind":"Mod","span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/mod.rs","byte_start":8874,"byte_end":8879,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":109}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":4941,"byte_end":4954,"line_start":62,"line_end":62,"column_start":17,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":5487,"byte_end":5500,"line_start":83,"line_end":83,"column_start":29,"column_end":42},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":582},"to":{"krate":0,"index":625}},{"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/backend/memory.rs","byte_start":7197,"byte_end":7210,"line_start":157,"line_end":157,"column_start":34,"column_end":47},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":582},"to":{"krate":0,"index":103}},{"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":10420,"byte_end":10428,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":11080,"byte_end":11101,"line_start":82,"line_end":82,"column_start":15,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":13588,"byte_end":13595,"line_start":190,"line_end":190,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":625},"to":{"krate":0,"index":718}},{"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":16585,"byte_end":16593,"line_start":288,"line_end":288,"column_start":24,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":1392},"to":{"krate":0,"index":243}},{"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":17383,"byte_end":17396,"line_start":317,"line_end":317,"column_start":2,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/executor.rs","byte_start":33582,"byte_end":33595,"line_start":936,"line_end":936,"column_start":6,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":254},"to":{"krate":49,"index":386}},{"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":39785,"byte_end":39804,"line_start":29,"line_end":29,"column_start":15,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":48668,"byte_end":48684,"line_start":402,"line_end":402,"column_start":49,"column_end":65},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":844},"to":{"krate":0,"index":625}},{"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":50273,"byte_end":50289,"line_start":466,"line_end":466,"column_start":61,"column_end":77},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":844},"to":{"krate":0,"index":718}},{"span":{"file_name":"/Users/stefan_muto/.cargo/registry/src/github.com-1ecc6299db9ec823/evm-0.35.0/src/executor/stack/memory.rs","byte_start":52438,"byte_end":52454,"line_start":550,"line_end":550,"column_start":37,"column_end":53},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":844},"to":{"krate":4294967295,"index":4294967295}}]}